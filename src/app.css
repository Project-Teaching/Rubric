@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

.navbar {
    display: flex;
    align-items: center;
    padding: var(--navbar-padding, .5rem);
    min-height: 3rem;
    width: 100%
}

:where(.navbar > :not(script, style)) {
    display: inline-flex;
    align-items: center;
}

.navbar-start {
    width: 50%;
    justify-content: flex-start;
}

.navbar-center {
    flex-shrink: 0;
}

.navbar-end {
    width: 50%;
    justify-content: flex-end;
}

.drawer {
    position: relative;
    display: grid;
    grid-auto-columns: max-content auto;
    width: 100%}
.drawer-content {
    grid-column-start: 2;
    grid-row-start: 1;
    min-width: 0;
}
.drawer-side {
    pointer-events: none;
    position: fixed;
    inset-inline-start: 0px;
    top: 0;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    width: 100%;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr));
    align-items: flex-start;
    justify-items: start;
    overflow-x: hidden;
    overflow-y: hidden;
    overscroll-behavior: contain;
    height: 100vh;
    height: 100dvh;
    z-index: 1000;
}
.drawer-side>.drawer-overlay {
    position: sticky;
    top: 0;
    place-self: stretch;
    cursor: pointer;
    background-color: transparent;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: .2s;
}
.drawer-side>* {
    grid-column-start: 1;
    grid-row-start: 1;
}
.drawer-side>:not(.drawer-overlay) {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: .3s;
    will-change: transform;
    transform: translateX(-100%);
}
[dir=rtl] .drawer-side>:not(.drawer-overlay) {
    transform: translateX(100%);
}
.drawer-toggle {
    position: fixed;
    height: 0;
    width: 0;
    appearance: none;
    opacity: 0;
}
.drawer-toggle:checked~.drawer-side {
    pointer-events: auto;
    visibility: visible;
    overflow-y: auto;
}
.drawer-toggle:checked~.drawer-side>:not(.drawer-overlay) {
    transform: translateX(0);
}
.drawer-end {
    grid-auto-columns: auto max-content;
}
.drawer-end .drawer-toggle~.drawer-content {
    grid-column-start: 1;
}
.drawer-end .drawer-toggle~.drawer-side {
    grid-column-start: 2;
    justify-items: end;
}
.drawer-end .drawer-toggle~.drawer-side>:not(.drawer-overlay) {
    transform: translateX(100%);
}
[dir=rtl] .drawer-end .drawer-toggle~.drawer-side>:not(.drawer-overlay) {
    transform: translateX(-100%);
}
.drawer-end .drawer-toggle:checked~.drawer-side>:not(.drawer-overlay) {
    transform: translateX(0);
}
.drawer-toggle:checked~.drawer-side>.drawer-overlay {
    background-color: #0006;
}
.drawer-toggle:focus-visible~.drawer-content label.drawer-button {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
}
.drawer-open>.drawer-toggle {
    display: none;
}
.drawer-open>.drawer-toggle~.drawer-side {
    pointer-events: auto;
    visibility: visible;
    position: sticky;
    display: block;
    width: auto;
    overscroll-behavior: auto;
}
.drawer-open>.drawer-toggle~.drawer-side>:not(.drawer-overlay) {
    transform: translateX(0);
}
[dir=rtl] .drawer-open>.drawer-toggle~.drawer-side>:not(.drawer-overlay) {
    transform: translateX(0);
}
.drawer-open>.drawer-toggle:checked~.drawer-side {
    pointer-events: auto;
    visibility: visible;
}
.drawer-open>.drawer-side {
    overflow-y: auto;
}
html:has(.drawer-toggle:checked) {
    overflow-y: hidden;
    scrollbar-gutter: stable;
}
html:has(.drawer-open.drawer-open) {
    overflow-y: auto;
    scrollbar-gutter: auto;
}
.drawer-open>.drawer-toggle~.drawer-side>.drawer-overlay {
    cursor: default;
    background-color: transparent;
}

.dropdown {
    position: relative;
    display: inline-block;
}

.dropdown>:not(summary):focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.dropdown .dropdown-content {
    position: absolute;
}

.dropdown:is(:not(details)) .dropdown-content {
    visibility: hidden;
    opacity: 0;
    transform-origin: top;
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: .2s;
}

.dropdown-end .dropdown-content {
    inset-inline-end: 0px;
}

.dropdown-left .dropdown-content {
    bottom: auto;
    inset-inline-end: 100%;
    top: 0;
    transform-origin: right;
}

.dropdown-right .dropdown-content {
    bottom: auto;
    inset-inline-start: 100%;
    top: 0;
    transform-origin: left;
}

.dropdown-bottom .dropdown-content {
    bottom: auto;
    top: 100%;
    transform-origin: top;
}

.dropdown-top .dropdown-content {
    bottom: 100%;
    top: auto;
    transform-origin: bottom;
}

.dropdown-end.dropdown-right .dropdown-content {
    bottom: 0;
    top: auto;
}

.dropdown-end.dropdown-left .dropdown-content {
    bottom: 0;
    top: auto;
}

.dropdown.dropdown-open .dropdown-content,
.dropdown:focus-within .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content {
    visibility: visible;
    opacity: 1;
}

.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    font-size: .875rem;
    line-height: 1.25rem;
}

menu,
ol,
ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

.menu li>:not(ul, .menu-title, details, .btn).active,
.menu li>:not(ul, .menu-title, details, .btn):active,
.menu li>details>summary:active {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)));
}

.menu :where(li ul) {
    position: relative;
    white-space: nowrap;
    margin-inline-start: 1rem;
    padding-inline-start: 0.5rem;
}

.menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    -webkit-user-select: none;
    user-select: none;
}

.menu li.disabled {
    cursor: not-allowed;
    -webkit-user-select: none;
    user-select: none;
    color: var(--fallback-bc, oklch(var(--bc)/.3));
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
}

:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch;
}

:where(.menu li) .badge {
    justify-self: end;
}

:where(.menu li:empty) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    opacity: .1;
    margin: .5rem 1rem;
    height: 1px;
}

.menu :where(li ul):before {
    position: absolute;
    bottom: .75rem;
    inset-inline-start: 0px;
    top: .75rem;
    width: 1px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc, oklch(var(--bc)/var(--tw-bg-opacity)));
    opacity: .1;
    content: ""
}

.menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--rounded-btn, .5rem);
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    text-align: start;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: .2s;
    text-wrap: balance;
}

:where(.menu li:not(.menu-title, .disabled) > :not(ul, details, .menu-title)):is(summary):not(.active, .btn):focus-visible,
:where(.menu li:not(.menu-title, .disabled) > :not(ul, details, .menu-title)):not(summary, .active, .btn).focus,
:where(.menu li:not(.menu-title, .disabled) > :not(ul, details, .menu-title)):not(summary, .active, .btn):focus,
:where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):is(summary):not(.active, .btn):focus-visible,
:where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(summary, .active, .btn).focus,
:where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(summary, .active, .btn):focus {
    cursor: pointer;
    background-color: var(--fallback-bc, oklch(var(--bc)/.1));
    --tw-text-opacity: 1;
    color: var(--fallback-bc, oklch(var(--bc)/var(--tw-text-opacity)));
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.menu li>:not(ul, .menu-title, details, .btn).active,
.menu li>:not(ul, .menu-title, details, .btn):active,
.menu li>details>summary:active {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)));
}

.menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
}

.menu :where(li > .menu-dropdown-toggle):after,
.menu :where(li > details > summary):after {
    justify-self: end;
    display: block;
    margin-top: -.5rem;
    height: .5rem;
    width: .5rem;
    transform: rotate(45deg);
    transition-property: transform, margin-top;
    transition-duration: .3s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    content: "";
    transform-origin: 75% 75%;
    box-shadow: 2px 2px;
    pointer-events: none;
}

.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after,
.menu :where(li > details[open] > summary):after {
    transform: rotate(225deg);
    margin-top: 0;
}

.menu-title {
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    font-size: .875rem;
    line-height: 1.25rem;
    font-weight: 700;
    color: var(--fallback-bc, oklch(var(--bc)/.4));
}

.menu-horizontal {
    display: inline-flex;
    flex-direction: row;
}

.menu-horizontal>li:not(.menu-title)>details>ul {
    position: absolute;
}

.menu-vertical {
    display: flex;
    flex-direction: column;
}

.menu-vertical>li:not(.menu-title)>details>ul {
    position: relative;
}

.menu-sm :where(li:not(.menu-title) > :not(ul, details, .menu-title)),
.menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--rounded-btn, .5rem);
    padding-left: .75rem;
    padding-right: .75rem;
    padding-top: .25rem;
    padding-bottom: .25rem;
    font-size: .875rem;
    line-height: 1.25rem;
}

.menu-sm .menu-title {
    padding-left: .75rem;
    padding-right: .75rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
}

.menu li:hover {
    background-color: rgba(205, 208, 207, 0.164);
    border-radius: 0.5rem;
}

.btn-circle {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0;
}

.btn-ghost {
    border-width: 1px;
    border-color: transparent;
    background-color: transparent;
    color: currentColor;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    outline-color: currentColor;
}

.btn-ghost.btn-active {
    border-color: transparent;
    background-color: var(--fallback-bc, oklch(var(--bc)/.2));
}

.stack {
    display: inline-grid;
    place-items: center;
    align-items: flex-end;
}

.stack>* {
    grid-column-start: 1;
    grid-row-start: 1;
    transform: translateY(10%) scale(.9);
    z-index: 1;
    width: 100%;
    opacity: .6;
}

.stack>:nth-child(2) {
    transform: translateY(5%) scale(.95);
    z-index: 2;
    opacity: .8;
}

.stack>:first-child {
    transform: translateY(0) scale(1);
    z-index: 3;
    opacity: 1;
}

.card-daisy {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
}

.card-daisy:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap: .5rem;
}

.card-body :where(p) {
    flex-grow: 1;
}

.card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: .5rem;
}

.card-daisy figure {
    display: flex;
    align-items: center;
    justify-content: center;
}

.card-daisy.image-full {
    display: grid;
}

.card-daisy.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n, oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: .75;
}

.card-daisy.image-full:before,
.card-daisy.image-full>* {
    grid-column-start: 1;
    grid-row-start: 1;
}

.card-daisy.image-full>figure img {
    height: 100%;
    object-fit: cover;
}

.card-daisy.image-full>.card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc, oklch(var(--nc)/var(--tw-text-opacity)));
}

.swap {
    position: relative;
    display: inline-grid;
    -webkit-user-select: none;
    user-select: none;
    place-content: center;
    cursor: pointer;
}

.swap>* {
    grid-column-start: 1;
    grid-row-start: 1;
    transition-duration: .3s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-property: transform, opacity;
}

.swap input {
    appearance: none;
}

.swap .swap-indeterminate,
.swap .swap-on,
.swap input:indeterminate~.swap-on {
    opacity: 0;
}

.swap input:checked~.swap-off,
.swap input:indeterminate~.swap-off,
.swap-active .swap-off {
    opacity: 0;
}

.swap input:checked~.swap-on,
.swap input:indeterminate~.swap-indeterminate,
.swap-active .swap-on {
    opacity: 1;
}

.swap-rotate .swap-indeterminate,
.swap-rotate .swap-on,
.swap-rotate input:indeterminate~.swap-on {
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-active:where(.swap-rotate) .swap-off,
.swap-rotate input:checked~.swap-off,
.swap-rotate input:indeterminate~.swap-off {
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-active:where(.swap-rotate) .swap-on,
.swap-rotate input:checked~.swap-on,
.swap-rotate input:indeterminate~.swap-indeterminate {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-flip {
    transform-style: preserve-3d;
    perspective: 16em;
}

.swap-flip .swap-indeterminate,
.swap-flip .swap-on,
.swap-flip input:indeterminate~.swap-on {
    transform: rotateY(180deg);
    backface-visibility: hidden;
    opacity: 1;
}

.swap-active:where(.swap-flip) .swap-off,
.swap-flip input:checked~.swap-off,
.swap-flip input:indeterminate~.swap-off {
    transform: rotateY(-180deg);
    backface-visibility: hidden;
    opacity: 1;
}

.swap-active:where(.swap-flip) .swap-on,
.swap-flip input:checked~.swap-on,
.swap-flip input:indeterminate~.swap-indeterminate {
    transform: rotateY(0);
}

.avatar {
    position: relative;
    display: inline-flex;
}

.avatar>div {
    display: block;
    aspect-ratio: 1/1;
    overflow: hidden;
}

.avatar img {
    height: 100%;
    width: 100%;
    object-fit: cover;
}

.avatar.placeholder>div {
    display: flex;
    align-items: center;
    justify-content: center;
}

.avatar-group {
    display: flex;
    overflow: hidden;
}

.avatar-group :where(.avatar) {
    overflow: hidden;
    border-radius: 9999px;
    border-width: 4px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b1, oklch(var(--b1)/var(--tw-border-opacity)));
}

.avatar.online:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su, oklch(var(--su)/var(--tw-bg-opacity)));
    outline-style: solid;
    outline-width: 2px;
    outline-color: var(--fallback-b1, oklch(var(--b1)/1));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%
}

.avatar.offline:before {
    content: "";
    position: absolute;
    z-index: 10;
    display: block;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3, oklch(var(--b3)/var(--tw-bg-opacity)));
    outline-style: solid;
    outline-width: 2px;
    outline-color: var(--fallback-b1, oklch(var(--b1)/1));
    width: 15%;
    height: 15%;
    top: 7%;
    right: 7%
}

.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: column;
    place-items: start;
    column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: .875rem;
    line-height: 1.25rem;
}
.footer>* {
    display: grid;
    place-items: start;
    gap: .5rem;
}
.footer-center {
    place-items: center;
    text-align: center;
}
.footer-center>* {
    place-items: center;
}

.modal {
    pointer-events: none;
    position: fixed;
    inset: 0px;
    margin: 0;
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    justify-items: center;
    padding: 0;
    opacity: 0;
    overscroll-behavior: contain;
    z-index: 999;
    background-color: transparent;
    color: inherit;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-property: transform, opacity, visibility;
    overflow-y: hidden;
}
.modal-scroll {
    overscroll-behavior: auto;
}
:where(.modal) {
    align-items: center;
}
.modal-box {
    max-height: calc(100vh - 5em);
    grid-column-start: 1;
    grid-row-start: 1;
    width: 91.666667%;
    max-width: 32rem;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    padding: 1.5rem;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: .2s;
    box-shadow: rgba(0, 0, 0, .25) 0 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain;
}
.modal-open, .modal-toggle:checked+.modal, .modal:target, .modal[open] {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
}
.modal-action {
    display: flex;
    margin-top: 1.5rem;
    justify-content: flex-end;
}
.modal-toggle {
    position: fixed;
    height: 0;
    width: 0;
    appearance: none;
    opacity: 0;
}
:root:has(:is(.modal-open, .modal:target, .modal-toggle:checked + .modal, .modal[open])) {
    overflow: hidden;
    scrollbar-gutter: stable;
}
.modal::backdrop, .modal:not(dialog:not(.modal-open)) {
    background-color: #0006;
    animation: modal-pop .2s ease-out;
}
.modal-backdrop {
    z-index: -1;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    align-self: stretch;
    justify-self: stretch;
    color: transparent;
}
.modal-open .modal-box, .modal-toggle:checked+.modal .modal-box, .modal:target .modal-box, .modal[open] .modal-box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.modal-action>:not([hidden])~:not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(.5rem * var(--tw-space-x-reverse));
    margin-left: calc(.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.modal-top {
    place-items: start;
}
.modal-middle {
    place-items: center;
}
.modal-bottom {
    place-items: end;
}
.modal-top :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: -2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: 0;
    border-top-right-radius: 0;
}
.modal-middle :where(.modal-box) {
    width: 91.666667%;
    max-width: 32rem;
    --tw-translate-y: 0px;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
}
.modal-bottom :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: 2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
}
.textarea {
    min-height: 3rem;
    flex-shrink: 1;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: .5rem;
    padding-bottom: .5rem;
    font-size: .875rem;
    line-height: 1.25rem;
    line-height: 2;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
}
.textarea-bordered {
    border-color: var(--fallback-bc, oklch(var(--bc)/.2));
}
.textarea:focus {
    box-shadow: none;
    border-color: var(--fallback-bc, oklch(var(--bc)/.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc, oklch(var(--bc)/.2));
}

.indicator {
    position: relative;
    display: inline-flex;
    width: max-content;
}
.indicator :where(.indicator-item) {
    z-index: 1;
    position: absolute;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    white-space: nowrap;
}
.indicator :where(.indicator-item) {
    bottom: auto;
    inset-inline-end: 0px;
    inset-inline-start: auto;
    top: 0;
    --tw-translate-y: -50%;
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item):where([dir=rtl], [dir=rtl] *) {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-start) {
    inset-inline-end: auto;
    inset-inline-start: 0px;
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-start):where([dir=rtl], [dir=rtl] *) {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-center) {
    inset-inline-end: 50%;
    inset-inline-start: 50%;
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-center):where([dir=rtl], [dir=rtl] *) {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-end) {
    inset-inline-end: 0px;
    inset-inline-start: auto;
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-end):where([dir=rtl], [dir=rtl] *) {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-bottom) {
    bottom: 0;
    top: auto;
    --tw-translate-y: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-middle) {
    bottom: 50%;
    top: 50%;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-top) {
    bottom: auto;
    top: 0;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

/* DAISY UI CSS END */

/* OWN CSS START */
.text-neutral-content {
    color: black;
}

.main-content {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.p-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2vh;
    text-align: center;
}

.m-page-content {
    display: flex;
    flex-direction: row;
    margin: 0vw 10vw 0vw 10vw;
}

.rubric-model-preview {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 6vh;
    text-align: center;
    color: white;
}

.rubric-model-preview-text {
    margin-top: 3vh;
    margin-bottom: 1vh;
}

.rmp-1 {
    background-color: #E5E5E5;
}

.rmp-2 {
    background-color: #A6A3A0;
    left: 8vw;
    top: 1vh;
}

.rmp-3 {
    background-color: #B3A08F;
    right: 8vw;
    top: 0.5vh;
}

.footer {
    max-height: 8vh;
}

.drawer-text {
    font-size: large;
}

.model-preview-group {
    z-index: 0;
}

/* Estilizando a barra de rolagem */
::-webkit-scrollbar {
    width: 12px;
    /* Largura da barra de rolagem */
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
    /* Cor do track */
}

::-webkit-scrollbar-thumb {
    background-color: #888888;
    /* Cor da barra */
    border-radius: 10px;
    /* Bordas arredondadas */
    border: 2px solid #f1f1f1;
    /* Espaçamento entre a barra e o track */
}

::-webkit-scrollbar-thumb:hover {
    background: #555;
    /* Cor da barra ao passar o mouse */
}


.logo-transition {
    transition: opacity 0.3s ease-in-out;
}

.logo-hidden {
    opacity: 0;
}

.logo-visible {
    opacity: 1;
}


/* SHEPHERD CSS */

.shepherd-button{background:#E9760C;border:0;border-radius:3px;color:hsla(0,0%,100%,.75);cursor:pointer;margin-right:.5rem;padding:.5rem 1.5rem;transition:all .5s ease}.shepherd-button:not(:disabled):hover{background:#e38a36;color:hsla(0,0%,100%,.75)}.shepherd-button.shepherd-button-secondary{background:#f1f2f3;color:rgba(0,0,0,.75)}.shepherd-button.shepherd-button-secondary:not(:disabled):hover{background:#d6d9db;color:rgba(0,0,0,.75)}.shepherd-button:disabled{cursor:not-allowed}
.shepherd-footer{border-bottom-left-radius:5px;border-bottom-right-radius:5px;display:flex;justify-content:flex-end;padding:0 .75rem .75rem}.shepherd-footer .shepherd-button:last-child{margin-right:0}
.shepherd-cancel-icon{background:transparent;border:none;color:hsla(0,0%,50%,.75);cursor:pointer;font-size:2em;font-weight:400;margin:0;padding:0;transition:color .5s ease}.shepherd-cancel-icon:hover{color:rgba(0,0,0,.75)}.shepherd-has-title .shepherd-content .shepherd-cancel-icon{color:hsla(0,0%,50%,.75)}.shepherd-has-title .shepherd-content .shepherd-cancel-icon:hover{color:rgba(0,0,0,.75)}
.shepherd-title{color:rgba(0,0,0,.75);display:flex;flex:1 0 auto;font-size:1rem;font-weight:400;margin:0;padding:0}
.shepherd-header{align-items:center;border-top-left-radius:5px;border-top-right-radius:5px;display:flex;justify-content:flex-end;line-height:2em;padding:.75rem .75rem 0}.shepherd-has-title .shepherd-content .shepherd-header{background:#e6e6e6;padding:1em}
.shepherd-text{font-size:1rem;line-height:1.3em;padding:.75em}.shepherd-text p{margin-top:0}.shepherd-text p:last-child{margin-bottom:0}
.shepherd-content{border-radius:5px;outline:none;padding:0}
.shepherd-element{background:#e6e6e6;border-radius:5px;box-shadow:0 1px 4px rgba(0,0,0,.2);max-width:400px;opacity:0;outline:none;transition:opacity .3s,visibility .3s;visibility:hidden;width:100%;z-index:9999}.shepherd-enabled.shepherd-element{opacity:1;visibility:visible}.shepherd-element[data-popper-reference-hidden]:not(.shepherd-centered){opacity:0;pointer-events:none;visibility:hidden}.shepherd-element,.shepherd-element *,.shepherd-element :after,.shepherd-element :before{box-sizing:border-box}.shepherd-arrow,.shepherd-arrow:before{height:16px;position:absolute;width:16px;z-index:-1}.shepherd-arrow:before{background:#e6e6e6;content:"";transform:rotate(45deg)}.shepherd-element[data-popper-placement^=top]>.shepherd-arrow{bottom:-8px}.shepherd-element[data-popper-placement^=bottom]>.shepherd-arrow{top:-8px}.shepherd-element[data-popper-placement^=left]>.shepherd-arrow{right:-8px}.shepherd-element[data-popper-placement^=right]>.shepherd-arrow{left:-8px}.shepherd-element.shepherd-centered>.shepherd-arrow{opacity:0}.shepherd-element.shepherd-has-title[data-popper-placement^=bottom]>.shepherd-arrow:before{background-color:#e6e6e6}.shepherd-target-click-disabled.shepherd-enabled.shepherd-target,.shepherd-target-click-disabled.shepherd-enabled.shepherd-target *{pointer-events:none}
.shepherd-modal-overlay-container{height:0;left:0;opacity:0;overflow:hidden;pointer-events:none;position:fixed;top:0;transition:all .3s ease-out,height 0ms .3s,opacity .3s 0ms;width:100vw;z-index:9997}.shepherd-modal-overlay-container.shepherd-modal-is-visible{height:100vh;opacity:.5;transform:translateZ(0);transition:all .3s ease-out,height 0s 0s,opacity .3s 0s}.shepherd-modal-overlay-container.shepherd-modal-is-visible path{pointer-events:all}

.dark .shepherd-arrow:before{
    background-color: #414141;
}
.dark .shepherd-element{
    background-color: #414141;
}